Schema For Underlying Database -

Users                                                                               
    User Entry                                                                      
        pk                                                                          
        username (unique)                                                           
        Full Name                                                                   
        Nationality                                                                 
        Age                                                                         
        Followers  < [username] >                                                       
        Following  < [username] > // New                                            
        Posts < [post_ids] >                                                        
        Liked Posts <[post_ids]>                                                    


Post                                                                              
    Posts                                                                         
        post_id                                                                   
        owner_id                                                                  
        content                                                                   
        date                                                                      
        time                                                                      
        likes  (no dislike but unlike should be there)                            



Schema For Middleware Database  (In MongoDB)                                        SM AS GV


# Store (From Memory to Database) : (post_updates.to_dict).to_json_String   // type(post_updates) = twoPSet                                 Saptarshi Ayush
# Load (From Database to Memory) :  new 2pSet_object.__dict__ =  load_json_to_dict(post_updates)   // type(post_updates) = json             Saptarshi Ayush


1. Collection Users_updates: 
entries                                                                             
    id=1. users_Gset 

2. Collection FullName Update                                                       
    id=1, user=username(unique) , full_name // type(full_name) = LWW

3. Collection Nationality Update                                                    
    id=1, user=userneme(unique) , nationality_updates // type( nationality_updates ) = LWW 

4. Collection Age Update                                                            
    id=1, user=username(unique) , age_update // type(age_update) = LWW

5. Collection Followers                                                             
    id=1, user=username(unique) , followers // type(followers) = twoPset of usernames


6. Collection Post_Update  // addition or deletion of posts                          
entries:
    id=1, user=username(unique)  /* Owner */ , post_updates // type(post_updates) = twoPSet of post_ids             Saptarshi

query example -> Post_Update.objects(username='ayush')                                


7. Collection LikedPosts Update                                                       
    id=1, user=username(unique) , liked_post_update // type(liked_post_update) = twoPset of post_ids


8. Collection Post_Content_Update                                                       
    id=1, post_id=post_id, post_content // type(post_content) = LWW



✔ | ❌ 

Steps: 

1> Underlying & Middleware Database Creation
    a. Schema Deciding for underlying database (See Above)             ✔               Saptarshi Gaurav Ayush
    b. Code & make mongo database                                      ✔               Ayush
    c. Decide schema for middleware (See Above)                        ✔               Saptarshi Gaurav Ayush
    d. make middleware database by code in json & mongoDB              ✔               Ayush Gaurav


2>  a. Add fake data                                                                            Ayush
    b.
        (i). Make Generic Functions for reading data                        UnderlyingDB        
            a. Get User data by id                                              ✔              Gaurav
            b. Get User data by username                                        ✔              Gaurav                                    
            c. Get Posts by user_id (should return all post ids)                ✔              Gaurav          
            d. Get Posts by username (should return all post ids)               ✔              Gaurav          
            e. Get Post_details by post_id                                      ✔              Saptarshi
            f. Get Followers by user_id                                         ✔              Saptarshi
            g. Get Followers by username                                        ✔              Saptarshi
            h. Check if post is liked or not by user_id                         ✔              Saptarshi
            i. Get all liked posts by a username                                ✔              Saptarshi
            j. Get all liked posts by a user_id                                 ✔              Ayush
            k. Get Following by user_id                                         ✔              Ayush
            l. Get Following by username                                        ✔              Ayush
            m. Get Number of Likes by post_id                                   ✔              Ayush
            n. Check if post is liked or not by username                        ✔              Ayush
            
        (ii). Make Generic Functions to update or write attributes          UnderlyingDB
            a. Add user                                                         ✔             Saptarshi
            b. Change user fullname -> Check if user Exists                     ✔             Gaurav
            c. Change Nationality -> Check if user Exists                       ✔              Gaurav
            d. Change Age -> Check if user Exists                               ✔              Ayush
            e. Add Follower -> Check if user Exists                             ✔              Ayush 
            f. Remove Follower -> Check if user Exists                          ✔              Ayush    
            g. Add post -> Check if user Exists                                 ✔              Ayush
            h. Change post content -> Check if post exists                      ✔              Saptarshi        
            i. Like a post -> Check if post exists                              ✔              Ayush
            j. Unlike a post -> Check if post exists                            ✔              Saptarshi  
            k. Delete a post -> Check if post exists                            ✔              Gaurav



3>  Above Functions (2 ii.)  should have choice to load to middleware database / write query to raft / do not
    separate function ->                                                                        Gaurav Ayush
        i. Call above function to update middleware dataset                                     Ayush
        ii. Add data to middleware / raft / or do nothing -> This will Call 4                   Gaurav


4> Make functions to update middleware database                                                 Ayush


5> Make messages for sending middleware data. -> message making & parsing functions.            Gaurav Ayush

6> Make engine to empty & send middleware data & update middleware data, & get from other databases & merge in middleware, update underlying to latest.                   Gaurav Ayush Saptarshi
    
    Assumption:  
        a. There are middleware datbases 1, 2, 3 & 4.
        b. The middleware datbase in our concern is 2 
    2's engine's process is written below 
    
    For Consensus in middleware database 2 :
        a. Fetch data from middleware databases 1, 3 & 4.                                         Saptarshi
        b. Merge the received data with the CRDT objects in middleware database 2 to achieve the conensus in this database          Ayush
        c. Send the updated data in the ordered manner to the underlying database-2               Ayush
        d. Clear middleware database 2                                                            Ayush
        
    On fetch call to database 2 :
        a. Get middleware database 2's data                                                       Saptarshi
        b. Return it 

    CRDT consensus is working. 



7> Implement time stamps                                                                           Ayush Gaurav




FOR TODAY !! MUST DO
1. update_database complete and check -> middleware going and update -> Testing Remaining           Ayush Gaurav

2. 2 middleware merge code -> assuming message like data
    Alternative Ways To Implement
        i> merge two middleware data  -> first msg se aata, second apan connected middleware se nikalte aur merge karke ghusa dete  ->  This is decided (delete kab karna ye decide karna)                  Gaurav
        ii> merge two middleware data  -> first msg se aata, secon apn pahle se nikal ke rakh lete, aur merge karte                                                                                         Not DONE

3. Code to write to underlying database from middleware                                             Ayush Gaurav
        Note : (Add user hai/ Add post) me ye check daalna ki already hain to mat daalo


4. Flask servers for CRDT for middleware                                                            Ayush
    a. join merge one code                                                                          Ayush
        ON RECEIVING MESSAGES THEY WILL MERGE THE DATABASE AND WRITE TO UNDERLYING DATABASE 
    b. flask automation                                                                             Gaurav Ayush
        AUTOMATE MULTIPLE SERVER DEPLOYMENT, TESTING

5. Contact protocol and implementation                                                                      Gaurav
    YE KAISE HOGA -> MSGS COMMUNICATION PROTOCOL, KAB KON KISKO KAISE (KAISE - MSGS ME) DATA BHEJEGA 

6. Connect with website (terminal)                                                                             
    a. make all forms                                                                               Gaurav                                                               


Important Kaam
twoPSet is not working as required -> isko sahi karna hai                                           Saptarshi
lww check karna hai - done                                                                          Ayush



#Terminal Interface                                                                                 Gaurav
seprate folder -> dashboard                                                                         
    options like hello
    choices in terminal: login, see all post,                                                       Gaurav Ayush

    Dashboard:  1. Hello                                                                            Gaurav
                2. login                                                                            Ayush
                3. Add User                                                                         Gaurav
                4. See all users                                                                    Gaurav
                5. See all post                                                                     Gaurav
                6. Edit user                                                                        Gaurav
                7. Edit post                                                                         Not working rn
                8. Select connected Node/ server (baadme)                                            Ayush

    see all user: username print 
    import from underlyingdatabaseread() like read users, print users                               Gaurav

    terminal output clear before new 
    numbers se option dikhane
    enter to continue -> dashboard

    say hello -> line daalni "say hello should be run"
    #login -> either press Esc to go back
                enter a username and press enter
                only user name dikhane, not details
                check hoga username exist...if not exist (error and go back to dashboard)
                        **Logged In Dashboard**
                        exist karta...login hogya and new screen in ternimal and clear terminal before
                        1. see profile details  
                                : on selection : print user details
                        2. see my posts
                                print post
                        3. follow a user
                                : usernamme dikhayenge , phir input maangege username, after recieving input, 
                                follow that username, & go back to Logged In Dashboard 
                        4. see my followers
                                :  iske folowers ko print karna hai
                        5. like a post
                                : posts, numbering ke saath, jo number select karega, 
                                us post ko like kar denge & back to Logged in Dashboard
                        6. last option logout
                                : logout kardenge/ go to main dashboard 

# ADD User              
    fullname
    age
    Nationality
    (User ki class me check karna constraints)

TASKS ACCOMPLISHED:

Raft Algorithm implementation                               - Gaurav
Raft Algorithm reaching consensus through message passing   - Gaurav
Raft Server connection updated model                        - Ayush

Deciding Schema for underlying and middleware database Creation - All
Adding Fake Data - Ayush         
Making functions for reading data from underlying and middleware database          - All
Making functions for writing data on underlying and middleware database            - All
Generic function for writing data on both underlying and middleware                - All

Writing CRDT functions to appropriately store the data - GSet, TwoPSet, LWW                            - Saptarshi
Working on interconversion between CRDT classes and json objects to enable its storage in the database - Ayush Saptarshi
Make messages for sending middleware data for different type of edit/update requests                   - Saptarshi
Make Flask servers to transfer the middleware data              - Ayush Gaurav
Parse messages for reading middleware data                      - Saptarshi
Merge middleware data after parsing                             - Ayush
Writing data onto underlying database from the middleware       - Ayush
Building User Interface for satisfying the requests of the user - Gaurav
Integration of terminal interface with crdt servers             - Ayush
Integration of databases to website                             - Ayush
Video and integration                                           - Ayush

